---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE } from '../../consts';

export const prerender = false;
---

<!doctype html>
<html lang="ko">
	<head>
		<BaseHead title={`Ìò∏ÌÖî ÏÉÅÏÑ∏ - ${SITE_TITLE}`} description="Ìò∏ÌÖî ÏÉÅÏÑ∏ Ï†ïÎ≥¥ÏôÄ ÏòàÏïΩ" />
		<style is:global>
			main {
				width: 100%;
				max-width: 1200px;
				margin: 0 auto;
				padding: 2rem 1rem;
			}
			
			.hotel-header {
				display: grid;
				grid-template-columns: 1fr 350px;
				gap: 2rem;
				margin-bottom: 3rem;
			}
			
			.hotel-images {
				border-radius: 16px;
				overflow: hidden;
			}
			
			.hotel-image {
				width: 100%;
				height: 400px;
				background: linear-gradient(135deg, #f0fdf4, #dcfce7);
				display: flex;
				align-items: center;
				justify-content: center;
				color: #065f46;
				font-size: 2rem;
				font-weight: 700;
				border: 3px solid rgba(16, 185, 129, 0.2);
			}
			
			.hotel-image::before {
				content: 'üè®‚ú®';
				font-size: 4rem;
				text-align: center;
			}
			
			.hotel-info {
				padding: 1rem;
			}
			
			.hotel-name {
				font-size: 2rem;
				font-weight: 700;
				margin-bottom: 0.5rem;
				color: #111827;
			}
			
			.hotel-name-en {
				font-size: 1rem;
				color: #6b7280;
				margin-bottom: 1rem;
			}
			
			.hotel-address {
				color: #6b7280;
				margin-bottom: 1rem;
				display: flex;
				align-items: center;
				gap: 0.5rem;
			}
			
			.hotel-contact {
				margin-bottom: 1.5rem;
			}
			
			.contact-item {
				display: flex;
				align-items: center;
				gap: 0.5rem;
				margin-bottom: 0.5rem;
				color: #374151;
			}
			
			.amenities {
				display: flex;
				flex-wrap: wrap;
				gap: 0.5rem;
				margin-bottom: 1.5rem;
			}
			
			.amenity-tag {
				background: #f0fdf4;
				color: #065f46;
				padding: 0.5rem 1rem;
				border-radius: 12px;
				font-size: 0.875rem;
				font-weight: 500;
			}
			
			.booking-card {
				background: white;
				border-radius: 16px;
				padding: 1.5rem;
				box-shadow: 0 8px 24px rgba(0,0,0,0.12);
				position: sticky;
				top: 2rem;
				height: fit-content;
			}
			
			.booking-title {
				font-size: 1.25rem;
				font-weight: 700;
				margin-bottom: 1.5rem;
				color: #111827;
			}
			
			.date-inputs {
				display: grid;
				grid-template-columns: 1fr 1fr;
				gap: 1rem;
				margin-bottom: 1rem;
			}
			
			.form-group {
				display: flex;
				flex-direction: column;
			}
			
			.form-group label {
				margin-bottom: 0.5rem;
				font-weight: 600;
				color: #374151;
				font-size: 0.875rem;
			}
			
			.form-group input,
			.form-group select {
				padding: 0.75rem;
				border: 2px solid #e5e7eb;
				border-radius: 8px;
				font-size: 0.875rem;
				transition: border-color 0.2s;
			}
			
			.form-group input:focus,
			.form-group select:focus {
				outline: none;
				border-color: #10b981;
			}
			
			.guests-input {
				margin-bottom: 1.5rem;
			}
			
			.price-summary {
				border-top: 1px solid #e5e7eb;
				padding-top: 1rem;
				margin-bottom: 1.5rem;
			}
			
			.price-item {
				display: flex;
				justify-content: space-between;
				margin-bottom: 0.5rem;
				color: #6b7280;
			}
			
			.price-total {
				display: flex;
				justify-content: space-between;
				font-weight: 700;
				font-size: 1.125rem;
				color: #111827;
				border-top: 1px solid #e5e7eb;
				padding-top: 0.5rem;
			}
			
			.book-btn {
				width: 100%;
				padding: 1.5rem;
				background: linear-gradient(135deg, #10b981, #059669);
				color: white;
				border: none;
				border-radius: 50px;
				font-size: 1.2rem;
				font-weight: 800;
				cursor: pointer;
				transition: all 0.4s ease;
				box-shadow: 0 8px 25px rgba(16, 185, 129, 0.4);
				text-transform: uppercase;
				letter-spacing: 1px;
				position: relative;
				overflow: hidden;
			}
			
			.book-btn:hover {
				background: linear-gradient(135deg, #059669, #047857);
				transform: translateY(-3px) scale(1.02);
				box-shadow: 0 12px 35px rgba(16, 185, 129, 0.5);
			}
			
			.book-btn:disabled {
				background: linear-gradient(135deg, #d1d5db, #9ca3af);
				cursor: not-allowed;
				transform: none;
				box-shadow: none;
			}
			
			.book-btn::before {
				content: '';
				position: absolute;
				top: 0;
				left: -100%;
				width: 100%;
				height: 100%;
				background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
				transition: left 0.6s;
			}
			
			.book-btn:hover::before {
				left: 100%;
			}
			
			.room-types {
				margin-top: 3rem;
			}
			
			.section-title {
				font-size: 1.75rem;
				font-weight: 800;
				margin-bottom: 2rem;
				color: #111827;
				text-align: center;
				background: linear-gradient(135deg, #10b981, #059669);
				-webkit-background-clip: text;
				-webkit-text-fill-color: transparent;
				background-clip: text;
			}
			
			/* Ï∂îÍ∞Ä Í∞ùÏã§ ÌÖåÏù¥Î∏î Í∞ïÌôî */
			table.rooms-table {
				border: 4px solid #e5e7eb !important;
				border-radius: 20px !important;
				background: white !important;
				box-shadow: 0 12px 35px rgba(0, 0, 0, 0.15) !important;
				overflow: hidden !important;
			}
			
			table.rooms-table thead {
				background: linear-gradient(135deg, #10b981, #059669) !important;
			}
			
			table.rooms-table th {
				background: linear-gradient(135deg, #10b981, #059669) !important;
				color: white !important;
				font-weight: 800 !important;
				text-transform: uppercase !important;
			}
			
			table.rooms-table td {
				background: white !important;
				border-right: 2px solid #f1f5f9 !important;
			}
			
			table.rooms-table tbody tr:hover td {
				background: linear-gradient(135deg, #f0fdf9, #ecfdf5) !important;
			}
			
			table.rooms-table tbody tr.selected td {
				background: linear-gradient(135deg, #d1fae5, #a7f3d0) !important;
				border-color: #10b981 !important;
			}
			
			.rooms-table {
				width: 100%;
				max-width: 1400px;
				margin: 0 auto;
				background: white;
				border-radius: 20px;
				box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
				overflow: hidden;
				border-collapse: collapse;
				border: 3px solid #e5e7eb;
			}
			
			.rooms-table thead {
				background: linear-gradient(135deg, #10b981, #059669);
				color: white;
			}
			
			.rooms-table th {
				padding: 2rem 1.5rem;
				font-weight: 700;
				text-align: center;
				font-size: 1.1rem;
				text-transform: uppercase;
				letter-spacing: 0.5px;
				border-bottom: 3px solid rgba(255, 255, 255, 0.3);
				border-right: 1px solid rgba(255, 255, 255, 0.2);
			}
			
			.rooms-table th:last-child {
				border-right: none;
			}
			
			.rooms-table tbody tr {
				transition: all 0.4s ease;
				border-bottom: 2px solid #f1f5f9;
			}
			
			.rooms-table tbody tr:hover {
				background: linear-gradient(135deg, #f0fdf9, #ecfdf5);
				transform: scale(1.02);
				box-shadow: 0 6px 25px rgba(16, 185, 129, 0.2);
			}
			
			.rooms-table tbody tr.selected {
				background: linear-gradient(135deg, #d1fae5, #a7f3d0) !important;
				border: 3px solid #10b981 !important;
				transform: scale(1.02) !important;
				box-shadow: 0 8px 30px rgba(16, 185, 129, 0.3) !important;
			}
			
			.rooms-table td {
				padding: 2rem 1.5rem;
				vertical-align: middle;
				text-align: center;
				border-right: 1px solid #f1f5f9;
			}
			
			.rooms-table td:last-child {
				border-right: none;
			}
			
			.room-info-cell {
				display: flex;
				align-items: center;
				gap: 2rem;
			}
			
			.room-image {
				width: 180px;
				height: 135px;
				border-radius: 16px;
				background: linear-gradient(135deg, #eff6ff, #dbeafe);
				flex-shrink: 0;
				box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
				display: flex;
				align-items: center;
				justify-content: center;
				color: #1e40af;
				font-size: 1.2rem;
				font-weight: 600;
				border: 2px solid rgba(59, 130, 246, 0.2);
			}
			
			.room-image::before {
				content: 'üõèÔ∏è';
				font-size: 2.5rem;
			}
			
			.room-info {
				text-align: left;
				flex: 1;
			}
			
			.room-name {
				font-size: 1.5rem;
				font-weight: 800;
				margin-bottom: 0.5rem;
				color: #111827;
			}
			
			.room-name-en {
				font-size: 1rem;
				color: #6b7280;
				font-style: italic;
				margin-bottom: 1rem;
			}
			
			.room-description {
				color: #6b7280;
				margin-bottom: 1.5rem;
				line-height: 1.6;
				font-size: 0.95rem;
			}
			
			.room-specs {
				display: flex;
				flex-wrap: wrap;
				gap: 0.75rem;
				margin-bottom: 1rem;
			}
			
			.spec-item {
				background: linear-gradient(135deg, #f9fafb, #f3f4f6);
				padding: 0.5rem 1rem;
				border-radius: 20px;
				font-size: 0.875rem;
				color: #374151;
				font-weight: 500;
				border: 1px solid rgba(16, 185, 129, 0.1);
			}
			
			.room-amenities {
				display: flex;
				flex-wrap: wrap;
				gap: 0.5rem;
				max-width: 300px;
			}
			
			.room-amenity {
				background: linear-gradient(135deg, #eff6ff, #dbeafe);
				color: #1d4ed8;
				padding: 0.375rem 0.875rem;
				border-radius: 20px;
				font-size: 0.8rem;
				font-weight: 600;
				border: 1px solid rgba(29, 78, 216, 0.2);
			}
			
			.price-cell {
				text-align: center;
			}
			
			.room-price {
				font-size: 2rem;
				font-weight: 900;
				color: #10b981;
				margin-bottom: 0.5rem;
				display: block;
			}
			
			.room-price-unit {
				font-size: 1rem;
				color: #6b7280;
			}
			
			.select-cell {
				text-align: center;
			}
			
			.select-room-btn {
				background: linear-gradient(135deg, #10b981, #059669) !important;
				color: white !important;
				border: none !important;
				border-radius: 50px !important;
				padding: 1.25rem 2.5rem !important;
				font-weight: 800 !important;
				font-size: 1.1rem !important;
				cursor: pointer !important;
				transition: all 0.4s ease !important;
				box-shadow: 0 8px 25px rgba(16, 185, 129, 0.5) !important;
				text-transform: uppercase !important;
				letter-spacing: 1px !important;
				position: relative !important;
				overflow: hidden !important;
				min-width: 160px !important;
				text-align: center !important;
			}
			
			.select-room-btn:hover {
				background: linear-gradient(135deg, #059669, #047857) !important;
				transform: translateY(-4px) scale(1.08) !important;
				box-shadow: 0 12px 35px rgba(16, 185, 129, 0.6) !important;
			}
			
			.select-room-btn::before {
				content: '' !important;
				position: absolute !important;
				top: 0 !important;
				left: -100% !important;
				width: 100% !important;
				height: 100% !important;
				background: linear-gradient(90deg, transparent, rgba(255,255,255,0.5), transparent) !important;
				transition: left 0.7s !important;
			}
			
			.select-room-btn:hover::before {
				left: 100% !important;
			}
			
			.selected .select-room-btn {
				background: linear-gradient(135deg, #047857, #065f46) !important;
				box-shadow: 0 0 0 4px rgba(16, 185, 129, 0.4) !important;
				transform: scale(1.05) !important;
			}
			
			.selected .select-room-btn::after {
				content: '‚úì ÏÑ†ÌÉùÎê®' !important;
				position: absolute !important;
				top: -30px !important;
				left: 50% !important;
				transform: translateX(-50%) !important;
				background: #047857 !important;
				color: white !important;
				padding: 4px 12px !important;
				border-radius: 15px !important;
				font-size: 0.8rem !important;
				font-weight: 600 !important;
				white-space: nowrap !important;
			}
			
			.loading, .error {
				text-align: center;
				padding: 3rem;
				font-size: 1.125rem;
			}
			
			.error {
				color: #dc2626;
				background: #fef2f2;
				border-radius: 8px;
			}

			@media (max-width: 768px) {
				.hotel-header {
					grid-template-columns: 1fr;
				}
				
				.booking-card {
					position: static;
				}
				
				.date-inputs {
					grid-template-columns: 1fr;
				}
				
				.rooms-table {
					font-size: 0.875rem;
				}
				
				.rooms-table th,
				.rooms-table td {
					padding: 1.5rem 0.75rem;
				}
				
				.room-info-cell {
					flex-direction: column;
					gap: 1rem;
				}
				
				.room-image {
					width: 150px;
					height: 112px;
				}
				
				.room-specs {
					justify-content: center;
				}
				
				.room-amenities {
					justify-content: center;
				}
				
				.room-price {
					font-size: 1.5rem;
				}
				
				.select-room-btn {
					padding: 1rem 1.5rem;
					font-size: 0.95rem;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<div id="hotel-container">
				<div class="loading">Ìò∏ÌÖî Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò§Îäî Ï§ëÏûÖÎãàÎã§...</div>
			</div>
		</main>

		<script>
			// URLÏóêÏÑú ÌååÎùºÎØ∏ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞
			const urlParams = new URLSearchParams(window.location.search);
			const pathSegments = window.location.pathname.split('/');
			const hotelId = pathSegments[pathSegments.length - 1];
			
			const checkinParam = urlParams.get('checkin');
			const checkoutParam = urlParams.get('checkout');
			const guestsParam = urlParams.get('guests');

			// Í∏∞Î≥∏ ÎÇ†Ïßú ÏÑ§Ï†ï
			const today = new Date();
			const tomorrow = new Date(today);
			tomorrow.setDate(tomorrow.getDate() + 1);
			
			let checkinDate = checkinParam || today.toISOString().split('T')[0];
			let checkoutDate = checkoutParam || tomorrow.toISOString().split('T')[0];
			let guestsCount = parseInt(guestsParam || '2');

			// Ìò∏ÌÖî ÏÉÅÏÑ∏ Ï†ïÎ≥¥ Î°úÎìú
			async function loadHotelDetail() {
				const container = document.getElementById('hotel-container');
				if (!container) return;

				try {
					const response = await fetch(`/api/hotels/${hotelId}`);
					const hotel = await response.json();

					// API ÏùëÎãµÏù¥ ÏóêÎü¨Î•º Ìè¨Ìï®ÌïòÍ≥† ÏûàÎäî Í≤ΩÏö∞ (Î°úÏª¨ ÌôòÍ≤Ω)
					if (hotel.error || hotel.development) {
						// Í∞úÎ∞úÌôòÍ≤ΩÏö© ÏÉòÌîå Îç∞Ïù¥ÌÑ∞
						showSampleHotel();
						return;
					}

					displayHotel(hotel);

				} catch (error) {
					console.error('Hotel detail fetch error:', error);
					// Í∞úÎ∞úÌôòÍ≤ΩÏö© ÏÉòÌîå Îç∞Ïù¥ÌÑ∞
					showSampleHotel();
				}
			}

			// ÏÉòÌîå Ìò∏ÌÖî Îç∞Ïù¥ÌÑ∞ ÌëúÏãú (Í∞úÎ∞úÌôòÍ≤ΩÏö©)
			function showSampleHotel() {
				const sampleHotel = {
					id: 1,
					name: "Î∏îÎ£®ÏôÄÏù∏ Î¶¨Ï°∞Ìä∏",
					nameEn: "BlueWine Resort",
					description: "Ï†úÏ£ºÎèÑÏùò ÏïÑÎ¶ÑÎã§Ïö¥ Î∞îÎã§Î•º Î∞îÎùºÎ≥¥Îäî ÌîÑÎ¶¨ÎØ∏ÏóÑ Í≥®ÌîÑ Î¶¨Ï°∞Ìä∏ÏûÖÎãàÎã§.",
					address: "Ï†úÏ£ºÌäπÎ≥ÑÏûêÏπòÎèÑ Ï†úÏ£ºÏãú Ïï†ÏõîÏùç Ìï¥ÏïàÎ°ú 123",
					phone: "064-123-4567",
					email: "info@bluewine-resort.com",
					checkInTime: "15:00",
					checkOutTime: "11:00",
					images: [],
					amenities: ["Í≥®ÌîÑÏû•", "Ïä§Ìåå", "ÏàòÏòÅÏû•", "Î†àÏä§ÌÜ†Îûë", "ÎπÑÏ¶àÎãàÏä§ÏÑºÌÑ∞", "Î¨¥Î£åWiFi", "Ï£ºÏ∞®Ïû•"],
					roomTypes: [
						{
							id: 1,
							name: "Ïò§ÏÖòÎ∑∞ Ïä§ÏúÑÌä∏",
							nameEn: "Ocean View Suite",
							description: "ÎÑìÏùÄ Î∞îÎã§ Ï†ÑÎßùÏùÑ Í∞êÏÉÅÌï† Ïàò ÏûàÎäî ÌîÑÎ¶¨ÎØ∏ÏóÑ Ïä§ÏúÑÌä∏Î£∏ÏûÖÎãàÎã§.",
							maxOccupancy: 4,
							bedType: "ÌÇπÎ≤†Îìú",
							roomSize: 85,
							basePrice: 350000,
							images: [],
							amenities: ["Î∞îÎã§Ï†ÑÎßù", "Î∞úÏΩîÎãà", "ÎØ∏ÎãàÎ∞î", "Ïª§ÌîºÎ®∏Ïã†", "ÏöïÏ°∞", "Î¨¥Î£åWiFi"],
							availableRooms: 3
						},
						{
							id: 2,
							name: "Í∞ÄÎì†Î∑∞ ÎîîÎü≠Ïä§",
							nameEn: "Garden View Deluxe",
							description: "ÏïÑÎ¶ÑÎã§Ïö¥ Ï†ïÏõêÏù¥ Î≥¥Ïù¥Îäî Ìé∏ÏïàÌïú Í∞ùÏã§ÏûÖÎãàÎã§.",
							maxOccupancy: 2,
							bedType: "ÎçîÎ∏îÎ≤†Îìú",
							roomSize: 55,
							basePrice: 250000,
							images: [],
							amenities: ["Ï†ïÏõêÏ†ÑÎßù", "Î∞úÏΩîÎãà", "ÎØ∏ÎãàÎ∞î", "Ïª§ÌîºÎ®∏Ïã†", "Î¨¥Î£åWiFi"],
							availableRooms: 4
						},
						{
							id: 3,
							name: "Ïä§ÌÉ†Îã§Îìú Î£∏",
							nameEn: "Standard Room",
							description: "Ìï©Î¶¨Ï†ÅÏù∏ Í∞ÄÍ≤©Ïùò ÍπîÎÅîÌïú ÌëúÏ§Ä Í∞ùÏã§ÏûÖÎãàÎã§.",
							maxOccupancy: 2,
							bedType: "ÌÄ∏Î≤†Îìú",
							roomSize: 35,
							basePrice: 180000,
							images: [],
							amenities: ["ÎØ∏ÎãàÎ∞î", "Ïª§ÌîºÎ®∏Ïã†", "Î¨¥Î£åWiFi"],
							availableRooms: 5
						}
					]
				};
				
				setTimeout(() => {
					displayHotel(sampleHotel);
				}, 1000);
			}

			// Ìò∏ÌÖî Ï†ïÎ≥¥ ÌëúÏãú
			function displayHotel(hotel: any) {
				const container = document.getElementById('hotel-container');
				if (!container) return;

				const amenities = Array.isArray(hotel.amenities) ? hotel.amenities : [];

				container.innerHTML = `
					<div class="hotel-header">
						<div class="hotel-images">
							<div class="hotel-image" title="${hotel.name}"></div>
						</div>
						<div class="booking-card">
							<div class="booking-title">ÏòàÏïΩÌïòÍ∏∞</div>
							<div class="date-inputs">
								<div class="form-group">
									<label for="checkin">Ï≤¥ÌÅ¨Ïù∏</label>
									<input type="date" id="checkin" value="${checkinDate}" min="${new Date().toISOString().split('T')[0]}" />
								</div>
								<div class="form-group">
									<label for="checkout">Ï≤¥ÌÅ¨ÏïÑÏõÉ</label>
									<input type="date" id="checkout" value="${checkoutDate}" />
								</div>
							</div>
							<div class="form-group guests-input">
								<label for="guests">Ìà¨ÏàôÍ∞ù</label>
								<select id="guests">
									<option value="1" ${guestsCount === 1 ? 'selected' : ''}>ÏÑ±Ïù∏ 1Î™Ö</option>
									<option value="2" ${guestsCount === 2 ? 'selected' : ''}>ÏÑ±Ïù∏ 2Î™Ö</option>
									<option value="3" ${guestsCount === 3 ? 'selected' : ''}>ÏÑ±Ïù∏ 3Î™Ö</option>
									<option value="4" ${guestsCount === 4 ? 'selected' : ''}>ÏÑ±Ïù∏ 4Î™Ö</option>
								</select>
							</div>
							<div class="price-summary" id="price-summary" style="display: none;">
								<div class="price-item">
									<span>1Î∞ï x <span id="nights">1</span>Î∞ï</span>
									<span id="room-total">‚Ç©0</span>
								</div>
								<div class="price-total">
									<span>Ï¥ù Ìï©Í≥Ñ</span>
									<span id="total-price">‚Ç©0</span>
								</div>
							</div>
							<button class="book-btn" id="book-btn" disabled>
								Í∞ùÏã§ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî
							</button>
						</div>
					</div>

					<div class="hotel-info">
						<h1 class="hotel-name">${hotel.name}</h1>
						${hotel.nameEn ? `<div class="hotel-name-en">${hotel.nameEn}</div>` : ''}
						${hotel.description ? `<p style="margin-bottom: 1.5rem; line-height: 1.6; color: #374151;">${hotel.description}</p>` : ''}
						
						<div class="hotel-address">
							<span>üìç</span>
							<span>${hotel.address}</span>
						</div>
						
						<div class="hotel-contact">
							${hotel.phone ? `<div class="contact-item"><span>üìû</span><span>${hotel.phone}</span></div>` : ''}
							${hotel.email ? `<div class="contact-item"><span>‚úâÔ∏è</span><span>${hotel.email}</span></div>` : ''}
							<div class="contact-item"><span>üïê</span><span>Ï≤¥ÌÅ¨Ïù∏ ${hotel.checkInTime} / Ï≤¥ÌÅ¨ÏïÑÏõÉ ${hotel.checkOutTime}</span></div>
						</div>
						
						<div class="amenities">
							${amenities.map((amenity: string) => `<span class="amenity-tag">${amenity}</span>`).join('')}
						</div>
					</div>

					<div class="room-types">
						<h2 class="section-title">‚ú® Í∞ùÏã§ ÏÑ†ÌÉù ‚ú®</h2>
						<table class="rooms-table">
							<thead>
								<tr>
									<th>Í∞ùÏã§ Ï†ïÎ≥¥</th>
									<th>Ìé∏ÏùòÏãúÏÑ§</th>
									<th>Í∞ÄÍ≤© (1Î∞ï)</th>
									<th>ÏÑ†ÌÉù</th>
								</tr>
							</thead>
							<tbody>
								${hotel.roomTypes.map((room: any) => {
									const roomAmenities = Array.isArray(room.amenities) ? room.amenities : [];
									
									return `
										<tr data-room-id="${room.id}">
											<td>
												<div class="room-info-cell">
													<div class="room-image" title="${room.name}"></div>
													<div class="room-info">
														<div class="room-name">${room.name}</div>
														${room.nameEn ? `<div class="room-name-en">${room.nameEn}</div>` : ''}
														${room.description ? `<div class="room-description">${room.description}</div>` : ''}
														
														<div class="room-specs">
															<span class="spec-item">üë• ÏµúÎåÄ ${room.maxOccupancy}Î™Ö</span>
															${room.bedType ? `<span class="spec-item">üõèÔ∏è ${room.bedType}</span>` : ''}
															${room.roomSize ? `<span class="spec-item">üìê ${room.roomSize}m¬≤</span>` : ''}
														</div>
													</div>
												</div>
											</td>
											<td>
												<div class="room-amenities">
													${roomAmenities.slice(0, 6).map((amenity: string) => `
														<span class="room-amenity">${amenity}</span>
													`).join('')}
													${roomAmenities.length > 6 ? `<span class="room-amenity">+${roomAmenities.length - 6}</span>` : ''}
												</div>
											</td>
											<td class="price-cell">
												<span class="room-price">‚Ç©${room.basePrice.toLocaleString()}</span>
												<div class="room-price-unit">/ Î∞ï</div>
											</td>
											<td class="select-cell">
												<button class="select-room-btn" onclick="selectRoom(${room.id}, '${room.name}', ${room.basePrice}, ${room.maxOccupancy})">
													ÏÑ†ÌÉùÌïòÍ∏∞
												</button>
											</td>
										</tr>
									`;
								}).join('')}
							</tbody>
						</table>
						</div>
					</div>
				`;

				// Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Ï∂îÍ∞Ä
				setupEventListeners();
			}

			// Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà ÏÑ§Ï†ï
			function setupEventListeners() {
				const checkinInput = document.getElementById('checkin') as HTMLInputElement;
				const checkoutInput = document.getElementById('checkout') as HTMLInputElement;

				if (checkinInput && checkoutInput) {
					checkinInput.addEventListener('change', updateBookingInfo);
					checkoutInput.addEventListener('change', updateBookingInfo);
					document.getElementById('guests')?.addEventListener('change', updateBookingInfo);

					// Ï≤¥ÌÅ¨Ïù∏ ÎÇ†Ïßú Î≥ÄÍ≤Ω Ïãú Ï≤¥ÌÅ¨ÏïÑÏõÉ ÏµúÏÜå ÎÇ†Ïßú ÏóÖÎç∞Ïù¥Ìä∏
					checkinInput.addEventListener('change', () => {
						const checkinDate = new Date(checkinInput.value);
						const nextDay = new Date(checkinDate);
						nextDay.setDate(nextDay.getDate() + 1);
						checkoutInput.min = nextDay.toISOString().split('T')[0];
						
						if (checkoutInput.value <= checkinInput.value) {
							checkoutInput.value = nextDay.toISOString().split('T')[0];
						}
					});
				}

				// ÏòàÏïΩ Î≤ÑÌäº Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Ï∂îÍ∞Ä
				document.getElementById('book-btn')?.addEventListener('click', () => {
					console.log('Book button clicked');
					proceedToBooking();
				});
			}

			let selectedRoom: any = null;

			// Í∞ùÏã§ ÏÑ†ÌÉù
			function selectRoom(roomId: number, roomName: string, basePrice: number, maxOccupancy: number) {
				console.log('selectRoom called:', { roomId, roomName, basePrice, maxOccupancy });
				
				// Ïù¥Ï†Ñ ÏÑ†ÌÉù Ìï¥Ï†ú
				document.querySelectorAll('tbody tr').forEach(row => {
					row.classList.remove('selected');
				});

				// ÌòÑÏû¨ ÏÑ†ÌÉù ÌëúÏãú
				const roomRow = document.querySelector(`tr[data-room-id="${roomId}"]`);
				if (roomRow) {
					roomRow.classList.add('selected');
					console.log('Room row selected:', roomRow);
				} else {
					console.log('Room row not found for ID:', roomId);
				}

				selectedRoom = { roomId, roomName, basePrice, maxOccupancy };
				console.log('Selected room set:', selectedRoom);
				updateBookingInfo();
			}

			// ÏòàÏïΩ Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏
			function updateBookingInfo() {
				console.log('updateBookingInfo called, selectedRoom:', selectedRoom);
				if (!selectedRoom) return;

				const checkinInput = document.getElementById('checkin') as HTMLInputElement;
				const checkoutInput = document.getElementById('checkout') as HTMLInputElement;
				const guestsSelect = document.getElementById('guests') as HTMLSelectElement;

				console.log('DOM elements found:', { 
					checkinInput: !!checkinInput, 
					checkoutInput: !!checkoutInput, 
					guestsSelect: !!guestsSelect 
				});

				if (!checkinInput || !checkoutInput || !guestsSelect) {
					console.log('Missing required DOM elements');
					return;
				}

				checkinDate = checkinInput.value;
				checkoutDate = checkoutInput.value;
				guestsCount = parseInt(guestsSelect.value);

				const checkin = new Date(checkinDate);
				const checkout = new Date(checkoutDate);
				const nights = Math.ceil((checkout.getTime() - checkin.getTime()) / (1000 * 60 * 60 * 24));

				console.log('Date calculations:', { checkinDate, checkoutDate, nights });

				if (nights > 0) {
					const roomTotal = selectedRoom.basePrice * nights;
					console.log('Room total calculated:', roomTotal);
					
					// ÏµúÎåÄ ÏàòÏö©Ïù∏Ïõê Ï≤¥ÌÅ¨
					const bookBtn = document.getElementById('book-btn') as HTMLButtonElement;
					if (!bookBtn) {
						console.log('Book button not found');
						return;
					}

					if (guestsCount > selectedRoom.maxOccupancy) {
						console.log('Guest count exceeded:', guestsCount, '>', selectedRoom.maxOccupancy);
						bookBtn.textContent = `ÏµúÎåÄ ÏàòÏö©Ïù∏Ïõê(${selectedRoom.maxOccupancy}Î™Ö) Ï¥àÍ≥º`;
						bookBtn.disabled = true;
						return;
					}

					const nightsElement = document.getElementById('nights');
					const roomTotalElement = document.getElementById('room-total');
					const totalPriceElement = document.getElementById('total-price');
					const priceSummaryElement = document.getElementById('price-summary');

					console.log('Price elements found:', {
						nights: !!nightsElement,
						roomTotal: !!roomTotalElement,
						totalPrice: !!totalPriceElement,
						priceSummary: !!priceSummaryElement
					});

					if (nightsElement) nightsElement.textContent = nights.toString();
					if (roomTotalElement) roomTotalElement.textContent = `‚Ç©${roomTotal.toLocaleString()}`;
					if (totalPriceElement) totalPriceElement.textContent = `‚Ç©${roomTotal.toLocaleString()}`;
					if (priceSummaryElement) priceSummaryElement.style.display = 'block';

					bookBtn.textContent = `${selectedRoom.roomName} ÏòàÏïΩÌïòÍ∏∞`;
					bookBtn.disabled = false;
					console.log('Book button updated:', bookBtn.textContent, 'disabled:', bookBtn.disabled);
				} else {
					console.log('Invalid nights calculation:', nights);
				}
			}

			// ÏòàÏïΩ ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
			function proceedToBooking() {
				console.log('proceedToBooking called, selectedRoom:', selectedRoom);
				if (!selectedRoom) {
					console.log('No room selected, cannot proceed');
					return;
				}

				const params = new URLSearchParams({
					hotelId: hotelId.toString(),
					roomTypeId: selectedRoom.roomId.toString(),
					roomName: selectedRoom.roomName,
					checkin: checkinDate,
					checkout: checkoutDate,
					guests: guestsCount.toString(),
					price: selectedRoom.basePrice.toString()
				});

				console.log('Booking params:', Object.fromEntries(params));
				console.log('Redirecting to:', `/booking?${params.toString()}`);
				
				window.location.href = `/booking?${params.toString()}`;
			}

			// Ï†ÑÏó≠ÏóêÏÑú Ï†ëÍ∑º Í∞ÄÎä•ÌïòÎèÑÎ°ù window Í∞ùÏ≤¥Ïóê Ìï†Îãπ
			(window as any).selectRoom = selectRoom;
			(window as any).proceedToBooking = proceedToBooking;

			// ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú Ìò∏ÌÖî Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞
			document.addEventListener('DOMContentLoaded', () => {
				loadHotelDetail();
			});
		</script>

		<Footer />
	</body>
</html>
